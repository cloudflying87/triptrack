services:
  triptracker:
    build: .
    restart: always
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - ./static:/app/static
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-triptrack.flyhomemnlab.com,localhost,127.0.0.1,localhost:8000}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@triptracker_db:5432/${DB_NAME}
      - REDIS_URL=redis://triptracker_redis:6379/1
    ports:
      - "8250:8000"
    depends_on:
      - triptracker_db
      - triptracker_redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  triptracker_db:
    image: postgres:16
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  triptracker_redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  triptracker_tunnel:
    image: cloudflare/cloudflared
    restart: always
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARED_TOKEN}
    depends_on:
      - triptracker
    networks:
      - default

volumes:
  postgres_data:
  redis_data: